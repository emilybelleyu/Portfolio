(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{"16l3":function(e,a,t){"use strict";t.r(a);var l=t("q1tI"),r=t.n(l),n=(t("PGGC"),t("qhky")),i=t("Bl7J"),o=t("Wbzz"),s=t("9eSz"),c=t.n(s);var m=()=>{const e=Object(o.useStaticQuery)("991795734");return r.a.createElement("div",{id:"projects",className:"projects"},r.a.createElement("div",{className:"blog"},r.a.createElement("article",null,r.a.createElement(c.a,{fluid:e.lunite.childImageSharp.fluid,className:"blog-img"})),r.a.createElement("div",{className:"blog-card"},r.a.createElement("h4",null,"Lunite App"),r.a.createElement("p",null,"Lunite is a modern, responsive weather dashboard built with React, TypeScript, and Tailwind CSS. It fetches real-time data from the OpenWeather API and Current UV Index API to display current weather, forecasts, and UV index information. I structured all API logic into a centralized WeatherAPI class, which makes requests to endpoints such as /weather, /forecast, and /uv using user-provided or stored coordinates. The app handles formatting and displaying temperature, humidity, wind speed, and UV index data across clean UI components built with Shadcn UI. I used TanStack Query for efficient data fetching and caching. Additional features include a favorites system using localStorage for storing preferred cities, and an interactive temperature chart built with Recharts, which visualizes upcoming temperature trends. Overall, Lunite delivers a personalized and informative weather-checking experience. "),r.a.createElement("div",{className:"blog-footer"},r.a.createElement("a",{href:"https://github.com/emilybelleyu/lunite",target:"_blank",rel:"noopener noreferrer"},"View Github")))),r.a.createElement("div",{className:"blog"},r.a.createElement("article",null,r.a.createElement(c.a,{fluid:e.kkslider.childImageSharp.fluid,className:"blog-img"})),r.a.createElement("div",{className:"blog-card"},r.a.createElement("h4",null,"K.K. Slider Concert"),r.a.createElement("p",null,"I built a fully animated, interactive K.K. Slider concert using Three.js, WebGL, and the Web Audio API. I modeled the character from scratch with a hierarchical structure to enable expressive animations, including real-time mouth movement synced to music. I implemented a physics-based particle system with THREE.BufferGeometry and THREE.Points to simulate dynamic concert effects like floating dust and sparkles. Interactive features include responsive camera motions, confetti sound effects, and stage lighting with real-time shadows. The intro sequence guides users through interactive elements, with custom fonts and animated dialogue mimicking the Animal Crossing aesthetic."),r.a.createElement("div",{className:"blog-footer"},r.a.createElement("a",{href:"https://github.com/naketriskirk/cs_174a_project",target:"_blank",rel:"noopener noreferrer"},"View Github"),r.a.createElement("a",{href:"https://www.youtube.com/watch?v=lqfPvo3LgFQ",target:"_blank",rel:"noopener noreferrer"},"View Project")))),r.a.createElement("div",{className:"blog"},r.a.createElement("article",null,r.a.createElement(c.a,{fluid:e.portfolio.childImageSharp.fluid,className:"blog-img"})),r.a.createElement("div",{className:"blog-card"},r.a.createElement("h4",null,"Em's Portfolio ",r.a.createElement("span",{role:"img","aria-label":"shavedice"},"🍧")),r.a.createElement("p",null,"A responsive web application using React, GraphQL, and SCSS. It serves as a medium for my own creative design and a platform to feature my past projects. It is also the website you are on."),r.a.createElement("div",{className:"blog-footer"},r.a.createElement("a",{href:"https://github.com/emilybelleyu/Portfolio",target:"_blank",rel:"noopener noreferrer"},"View Github"),r.a.createElement("a",{href:"https://emilybelleyu.github.io/Portfolio/",target:"_blank",rel:"noopener noreferrer"},"View Project")))),r.a.createElement("div",{className:"blog"},r.a.createElement("article",null,r.a.createElement(c.a,{fluid:e.foodies.childImageSharp.fluid,className:"blog-img"})),r.a.createElement("div",{className:"blog-card"},r.a.createElement("h4",null,"The Foodies ",r.a.createElement("span",{role:"img","aria-label":"juice"},"🧃")),r.a.createElement("p",null,"This web platform helps students discover UCLA dining halls and nearby restaurants through reviews from fellow students, faculty, and staff. I developed the frontend using React and managed backend services with Node.js and Firebase. The platform integrates Firebase Authentication for secure user login (frontend integration with backend handling), and uses Firebase Realtime Database (or Firestore) to store and manage user-generated content."),r.a.createElement("div",{className:"blog-footer"},r.a.createElement("a",{href:"https://github.com/GMochman/cs35l-project",target:"_blank",rel:"noopener noreferrer"},"View Github")))),r.a.createElement("div",{className:"blog"},r.a.createElement("article",null,r.a.createElement(c.a,{fluid:e.choruslapilli.childImageSharp.fluid,className:"blog-img"})),r.a.createElement("div",{className:"blog-card"},r.a.createElement("h4",null,"Chorus Lapilli ",r.a.createElement("span",{role:"img","aria-label":"rome"},"🕌")),r.a.createElement("p",null,"Implementation of a variant of terni lapilli. Grab a friend and feel free to play."),r.a.createElement("div",{className:"blog-footer"},r.a.createElement("a",{href:"https://github.com/emilybelleyu/chorus-lapilli",target:"_blank",rel:"noopener noreferrer"},"View Github")))),r.a.createElement("div",{className:"blog"},r.a.createElement("article",null,r.a.createElement(c.a,{fluid:e.pythonshuf.childImageSharp.fluid,className:"blog-img"})),r.a.createElement("div",{className:"blog-card"},r.a.createElement("h4",null,"Python GNU Shuf",r.a.createElement("span",{role:"img","aria-label":"shuffle"}," 🔀 ")),r.a.createElement("p",null,"Python implementation of GNU shuf. Shuf is an integral component of the textutils package within the GNU Core Utilities suite. The command-line utility can produce randomized permutations of lines extracted from input files, as well as generating random numbers within defined numerical ranges. It is applicable to a wide range of use cases, including data shuffling, random sampling, and the generation of arbitrary sequences."),r.a.createElement("div",{className:"blog-footer"}))),r.a.createElement("div",{className:"blog"},r.a.createElement("article",null,r.a.createElement(c.a,{fluid:e.mobileapp.childImageSharp.fluid,className:"blog-img"})),r.a.createElement("div",{className:"blog-card"},r.a.createElement("h4",null,"Arcadia High Mobile"),r.a.createElement("p",null,"A mobile news app designed to keep students and parents informed about school announcements and deadlines—consolidating updates from the school website and social media into one place. Built with Java for the Android frontend, and Firebase for the backend. It leverages Firebase Realtime Database (or Firestore) to populate the news feed and Firebase Cloud Messaging (FCM) to send targeted push notifications based on user subscriptions. (Used the ahsappdevprogrammers account!)"),r.a.createElement("div",{className:"blog-footer"},r.a.createElement("a",{href:"https://github.com/AHSAppDevTeam/AHS2020app",target:"_blank",rel:"noopener noreferrer"},"View Github"),r.a.createElement("a",{href:"https://apps.apple.com/us/app/arcadia-high-mobile/id1305220468",target:"_blank",rel:"noopener noreferrer"},"View Project")))),r.a.createElement("div",{className:"blog"},r.a.createElement("article",null,r.a.createElement(c.a,{fluid:e.ces.childImageSharp.fluid,className:"blog-img"})),r.a.createElement("div",{className:"blog-card"},r.a.createElement("h4",null,"Arcadia CMS ",r.a.createElement("span",{role:"img","aria-label":"bag"},"💼")),r.a.createElement("p",null,"A CRUD web application created as the content editing and management system for the Arcadia High Mobile app. Uses Google’s Firebase API for backend and HTML, CSS, Javascript for frontend. Specifically, it uses Firebase’s hosting, authentication, database, and cloud messaging services to deploy the website, authenticate content editors, populate the article feed, and send notifications to mobile app users."),r.a.createElement("div",{className:"blog-footer"},r.a.createElement("a",{href:"https://github.com/emilybelleyu/AHSWebsite",target:"_blank",rel:"noopener noreferrer"},"View Github")))),r.a.createElement("div",{className:"blog"},r.a.createElement("article",null,r.a.createElement(c.a,{fluid:e.castway.childImageSharp.fluid,className:"blog-img"})),r.a.createElement("div",{className:"blog-card"},r.a.createElement("h4",null,"Castway ",r.a.createElement("span",{role:"img","aria-label":"laptop"},"💻")),r.a.createElement("p",null,"An open source video conferencing web application using React, Node.js, Express, and Typescript. I implemented a multipeer connection using WebRTC protocol to introduce users/peers to each other via a signaling server."),r.a.createElement("div",{className:"blog-footer"},r.a.createElement("a",{href:"https://www.youtube.com/watch?v=RRO1xZRwhhQ",target:"_blank",rel:"noopener noreferrer"},"View Project")))),r.a.createElement("div",{className:"blog"},r.a.createElement("article",null,r.a.createElement(c.a,{fluid:e.fruity.childImageSharp.fluid,className:"blog-img"})),r.a.createElement("div",{className:"blog-card"},r.a.createElement("h4",null,"Fruity Friends ",r.a.createElement("span",{role:"img","aria-label":"strawberry"},"🍓")),r.a.createElement("p",null,"A mystery narrative game programmed in C# and made with the Unity game engine. A final project created while attending the California State Summer School for Mathematics & Science (COSMOS) '19 within the Game Design and Development cluster."),r.a.createElement("div",{className:"blog-footer"},r.a.createElement("a",{href:"https://play.unity.com/mg/other/fruity-friends",target:"_blank",rel:"noopener noreferrer"},"View Project")))))};a.default=()=>r.a.createElement("div",null,r.a.createElement(n.a,null,r.a.createElement("meta",{charSet:"utf-8"}),r.a.createElement("meta",{name:"viewport",content:"width=device-width, initial-scale=1.0"}),r.a.createElement("title",null,"Emily Yu"),r.a.createElement("link",{rel:"canonical",href:"https://emilybelleyu.github.io/Portfolio/projects"})),r.a.createElement(i.a,null,r.a.createElement(m,null)))}}]);
//# sourceMappingURL=component---src-pages-projects-js-d943ccd6c9c4358399cd.js.map